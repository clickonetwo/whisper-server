function e(e){return e&&e.__esModule?e.default:e}var t=globalThis,n={},s={},i=t.parcelRequire94c2;null==i&&((i=function(e){if(e in n)return n[e].exports;if(e in s){var t=s[e];delete s[e];var i={id:e,exports:{}};return n[e]=i,t.call(i.exports,i,i.exports),i.exports}var o=Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}).register=function(e,t){s[e]=t},t.parcelRequire94c2=i),i.register;var o=i("iM5HV"),r=i("fYo6y"),a=i("b2S2j"),o=i("iM5HV"),r=i("fYo6y"),l=i("3gKTU"),c=i("2Efon"),p=i("b8C0m");const d=e(l).get("publisherId")||"";let u=e(l).get("publisherName")||"";const h=e(l).get("clientId")||"";let g=e(l).get("clientName")||"";d&&u&&h||(window.location.href="/subscribe404.html");const f=new p.Realtime.Promise({clientId:h,authUrl:"/api/subscribeTokenRequest",echoMessages:!1}),x=`${d}:whisper`;let m=!1,v=!1;const j={live:"This is where live text will appear",past:"This is where past text will appear.\nThe newest lines will appear on top."},w={live:"",past:""};function C(t){let[n,s]=(0,r.useState)(t.name);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h2",{children:"Please provide your name to the whisperer:"}),(0,o.jsx)("input",{name:"listenerName",id:"listenerName",type:"text",value:n.valueOf(),onChange:function(e){s(g=e.target.value)}}),(0,o.jsx)("button",{id:"updateButton",type:"button",onClick:function(){t.setName(g),e(l).set("clientName",g,{expires:365})},children:"Update"})]})}function b(e){return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)("h1",{children:[e.name," has stopped whispering"]}),(0,o.jsxs)("p",{children:["You can close this window or ",(0,o.jsx)("a",{href:"/listen/index2.html",children:"click here to reconnect"}),"."]})]})}function $(e){let[t,n]=(0,r.useState)(`Connecting to ${u}...`),[s,i]=(0,r.useState)(j),{channel:a}=(0,c.useChannel)(x,t=>(function(e,t,n,s,i){if(R("content",t,n,s,i),e.name.toUpperCase()===h.toUpperCase()){console.log(`Received chunk directed here: ${e.data}`);let[o,r]=e.data.split("|",2);"-21"===o&&r.toUpperCase()===h.toUpperCase()?(console.log("Whisperer is dropping this client"),k("content",t,n,s)):y(e.data,i)}else"all"===e.name?y(e.data,i):e.clientId.toUpperCase()!=d.toUpperCase()?console.log(`Ignoring chunk from non-listener ${e.clientId}, topic ${e.name}: ${e.data}`):console.log(`Ignoring chunk with topic ${e.name}: ${e.data}`)})(t,a,e.setConnection,n,i));return(0,c.usePresence)(x,g,t=>{var s;s=e.setConnection,t.clientId.toUpperCase()==h.toUpperCase()?console.log(`Ignoring self presence message: ${t.action}, ${t.data}`):t.clientId.toUpperCase()===d.toUpperCase()?(console.log(`Received presence from Whisperer: ${t.action}, ${t.data}`),["present","enter","update"].includes(t.action)?(u=t.data,R("presence",a,s,n,i)):["leave","absent"].includes(t.action)&&k("presence",a,s,n)):console.log(`Ignoring presence message: ${t.clientId}, ${t.data}, ${t.action}`)}),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(I,{whisperer:t}),(0,o.jsx)("form",{children:(0,o.jsx)(U,{text:s})})]})}function I(e){return(0,o.jsx)("h1",{children:e.whisperer})}function U(e){return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("textarea",{id:"liveText",rows:10,value:e.text.live}),(0,o.jsx)("textarea",{id:"pastText",rows:30,readOnly:!0,value:e.text.past})]})}function R(e,t,n,s,i){m||(m=!0,console.log(`Connecting due to first message of type ${e}`),n("connected"),s(`Connected to ${u}`),i(w),v||(console.log("Requesting resend of live text..."),v=!0,t.publish(d,"-20|live").then()))}function k(e,t,n,s){console.log(`Disconnecting due to message of type: ${e}`),n("disconnected"),s(`Disconnected from ${u}`),t.detach().then()}function y(e,t){function n(e){return e.startsWith("-1")||!e.startsWith("-")}if(e.startsWith("-9|"))console.log("Received request to play sound");else if(v)e.startsWith("-4|")?(console.log("Received reset acknowledgement from whisperer, resetting live text"),t(e=>({live:"",past:e.past}))):n(e)?console.log("Ignoring diff chunk because a read is in progress"):e.startsWith("-1|")||e.startsWith("-2|")?console.log("Received unexpected past line chunk, ignoring it"):e.startsWith("-3|")&&(console.log("Receive live text chunk, update is over"),t(t=>({live:e.substring(3),past:t.past})),v=!1);else if(n(e)){if(e.startsWith("0|"))t(t=>({live:e.substring(2),past:t.past}));else if(e.startsWith("-1|"))console.log("Prepending live text to past line"),t(e=>({live:"",past:e.live+"\n"+e.past}));else{let[n,s]=e.split("|",2),i=parseInt(n);t(e=>({live:e.live.substring(0,i)+s,past:e.past}))}}else console.log("Ignoring non-diff chunk because no read in progress")}(0,a.createRoot)(document.getElementById("root")).render((0,o.jsx)(r.StrictMode,{children:(0,o.jsx)(function(){let[e,t]=(0,r.useState)("waiting"),[n,s]=(0,r.useState)(g);return"disconnected"==e?(0,o.jsx)(b,{name:u}):n?(0,o.jsx)(c.AblyProvider,{client:f,children:(0,o.jsx)($,{setConnection:t})}):(0,o.jsx)(C,{name:n,setName:s})},{})}));